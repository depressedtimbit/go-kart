class screen{
  screen() { //basic stucture for our "screen" object
    
  }

  void update(float delta) {

  }
  
  void draw() {
  
  }
  
  void draw3D() {
  
  }

  void keyPressed() {

  }

  void keyReleased() {

  }


}

class mainMenuScreen extends screen{ // main menu screen
  MenuButton startButton; //create values to hold our buttons
  MenuButton settingsButton;
  MenuButton editorButton;
  MenuButton quitButton;
  mainMenuScreen() {
    super();
    //create our menu using 3 menu buttons
    startButton = new MenuButton(new PVector(width * 0.10, height * 0.33), new PVector(width*0.30, height * (0.1)), "start", 40, color(#18DB26), color(#92DB97));
    settingsButton = new MenuButton(new PVector(width * 0.10, height * 0.44), new PVector(width*0.30, height * (0.1)), "settings", 40, color(#9B9B9B), color(#9B9B9B));
    editorButton = new MenuButton(new PVector(width * 0.10, height * 0.55), new PVector(width*0.30, height * (0.1)), "Level Editor", 40, color(#9B9B9B), color(#9B9B9B));
    quitButton = new MenuButton(new PVector(width * 0.10, height * 0.66), new PVector(width*0.30, height * (0.1)), "quit", 40, color(#18DB26), color(#92DB97));

  }
  
  void update(float delta) {
     //println(delta);
    if (startButton.checkWasPressed()) {  //check if start was pressed and change screen to our game
      screen newScreen = new gameScreen();
      changeScreen(newScreen);
    }

    if (editorButton.checkWasPressed()) {
      //screen newScreen = new editorScreen();
      //changeScreen(newScreen);
    }

    if (quitButton.checkWasPressed()) {
      exit();  //check if exit was pressed and exit
    }
  } 

  void draw() {
    fill(255);
    textAlign(CORNER);
    text("Main Menu", width * 0.10, height * 0.11); //draw a main menu logo
    startButton.draw();
    settingsButton.draw(); //draw our buttons
    editorButton.draw();
    quitButton.draw(); 

  }
}

class editorScreen extends screen{
  EditorMode editorMode = EditorMode.WALL;
  String workingDirectory = "assets/map.json";
  
  editorScreen() {

  }

  void draw() {
    
  
    fill(155);
    textAlign(LEFT);
    textSize(12);
    text("Editor", 50, 50);
    textSize(10);
    text("x: " + mouseX + " y: " +mouseY, 60, 60);
    
    text("file: "+ workingDirectory, 60, 70);
  }
}

class gameScreen extends screen{ //game screen
  kart playerKart;
  wall[] testWalls;
  boolean pauseMenu = false; //unused for now
  gameScreen() {
    super();
    playerKart = new kart(new PVector(width/2, height/2), new PVector(10, 10)); //init the player "kart" in the centre of the screen

    testWalls[] = new testWalls

    testWall = new wall(new PVector(138, 291), new PVector(60, 400), 0, color(#5A0505), WallType.WALL, -1);
    
    testWall = new wall(new PVector(300, 181), new PVector(60, 60), 0, color(#E3DC10), WallType.CHECKPOINT, 1);
  }

  void update(float delta) {
    playerKart.update(delta);
    testWall.onCollide(playerKart);

  }

  void draw() {
    fill(155);
    testWall.draw();
    playerKart.draw(); //draw the player "kart"
    text("Game", 50, 50);
    textSize(10);
    text("x: " + mouseX + " y: " +mouseY, 60, 60);
  }

   void keyPressed() {
      playerKart.keyPressed(); //call key pressed on the player "kart"
  }

  void keyReleased() {
      playerKart.keyReleased(); //call key Released on the player "kart"
  }

  void attemptFinish() {
    if (playerKart.finishedRace) {
      changeScreen(new mainMenuScreen());
    }
  }

  void loadMap() {

  }
}
